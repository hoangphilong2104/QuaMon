--ver 1.1
DECLARE
tbl_count number;
sql_stmt long;

BEGIN
--CUSTOMER
    SELECT COUNT(*) INTO tbl_count 
    FROM dba_tables
    WHERE owner = 'SYSTEM'
    AND table_name = 'CUSTOMER';

    IF(tbl_count <= 0)
        THEN
        sql_stmt:='
        CREATE TABLE CUSTOMER (
            ID_CUSTOMER NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
            NAME_CUSTOMER VARCHAR2(25) NOT NULL,
            ADDRESS_CUSTOMER VARCHAR2(200),
            CELLPHONE_CUSTOMER NUMBER(20),
            USERNAME_CUSTOMER VARCHAR2(30),
            PASSWORD_CUSTOMER VARCHAR2(150),
            BRITHDAY_CUSTOMER DATE,
            EMAIL_CUSTOMER VARCHAR2(100),
            ROLE_CUSTOMER VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            STATUS_CUSTOMER VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            PRIMARY KEY(ID_CUSTOMER)
        )';
        EXECUTE IMMEDIATE sql_stmt;
    END IF;
--MANAGER
SELECT COUNT(*) INTO tbl_count 
FROM dba_tables
WHERE owner = 'SYSTEM'
AND table_name = 'MANAGER';

IF(tbl_count <= 0)
    THEN
    sql_stmt:='
    CREATE TABLE MANAGER (
        ID_MANAGER NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
        NAME_MANAGER VARCHAR2(25) NOT NULL,
        ADDRESS_MANAGER VARCHAR2(200),
        CELLPHONE_MANAGER NUMBER(20),
        USERNAME_MANAGER VARCHAR2(30),
        PASSWORD_MANAGER VARCHAR2(150),
        EMAIL_MANAGER VARCHAR2(100),
        STATUS_MANAGER VARCHAR2(2) DEFAULT ''1'' NOT NULL,
        PRIMARY KEY(ID_MANAGER)
    )';
    EXECUTE IMMEDIATE sql_stmt;
END IF;
--STAFF
    SELECT COUNT(*) INTO tbl_count 
    FROM dba_tables
    WHERE owner = 'SYSTEM'
    AND table_name = 'STAFF';

    IF(tbl_count <= 0)
        THEN
        sql_stmt:='
        CREATE TABLE STAFF (
            ID_STAFF NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
            NAME_STAFF VARCHAR2(25) NOT NULL,
            ADDRESS_STAFF VARCHAR2(200),
            CELLPHONE_STAFF NUMBER(20),
            USERNAME_STAFF VARCHAR2(30),
            PASSWORD_STAFF VARCHAR2(150),
            BRITHDAY_STAFF DATE,
            EMAIL_STAFF VARCHAR2(100),
            DATE_START_WORK DATE NOT NULL,
            ID_MANAGER NUMBER(10),
            COEFFICIENT NUMBER(7,2),
            ROLE_STAFF VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            STATUS_STAFF VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            PRIMARY KEY(ID_STAFF),
            CONSTRAINT FK_ID_MANAGER_STAFF FOREIGN KEY(ID_MANAGER) REFERENCES MANAGER(ID_MANAGER)
        )';
        EXECUTE IMMEDIATE sql_stmt;
    END IF;

--SUPPLIER
    SELECT COUNT(*) INTO tbl_count 
    FROM dba_tables
    WHERE owner = 'SYSTEM'
    AND table_name = 'SUPPLIER';

    IF(tbl_count <= 0)
        THEN
        sql_stmt:='
        CREATE TABLE SUPPLIER (
            ID_SUPPLIER NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
            NAME_SUPPLIER VARCHAR2(25) NOT NULL,
            ADDRESS_SUPPLIER VARCHAR2(200),
            CELLPHONE_SUPPLIER NUMBER(20),
            STATUS_SUPPLIER VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            PRIMARY KEY(ID_SUPPLIER)
        )';
        EXECUTE IMMEDIATE sql_stmt;
    END IF;
--PRODUCT_CATEGORY
SELECT COUNT(*) INTO tbl_count 
    FROM dba_tables
    WHERE owner = 'SYSTEM'
    AND table_name = 'PRODUCT_CATEGORY';

    IF(tbl_count <= 0)
        THEN
        sql_stmt:='
        CREATE TABLE PRODUCT_CATEGORY (
            ID_PRODUCT_CATEGORY NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
            NAME_PRODUCT_CATEGORY VARCHAR2(25) NOT NULL,
            STATUS_PRODUCT_CATEGORY VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            PRIMARY KEY(ID_PRODUCT_CATEGORY)
        )';
        EXECUTE IMMEDIATE sql_stmt;
    END IF;
--PRODUCT
SELECT COUNT(*) INTO tbl_count 
    FROM dba_tables
    WHERE owner = 'SYSTEM'
    AND table_name = 'PRODUCT';

    IF(tbl_count <= 0)
        THEN
        sql_stmt:='
        CREATE TABLE PRODUCT (
            ID_PRODUCT NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
            NAME_PRODUCT VARCHAR2(25) NOT NULL,
            DESCRIPTION_PRODUCT VARCHAR2(200),
            IMPORT_PRICE_PRODUCT NUMBER(22,2),
            EXPORT_PRICE_PRODUCT NUMBER(22,2),
            IMAGE_PRODUCT VARCHAR2(200),
            ID_PRODUCT_CATEGORY NUMBER(10) NOT NULL,
            ID_SUPPLIER NUMBER(10) NOT NULL,
            QUANTITY_PRODUCT NUMBER(10) DEFAULT 0 NOT NULL,
            STATUS_PRODUCT VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            PRIMARY KEY(ID_PRODUCT),
            CONSTRAINT FK_ID_PRODUCT_CATEGORY_PRODUCT FOREIGN KEY(ID_PRODUCT_CATEGORY) REFERENCES PRODUCT_CATEGORY(ID_PRODUCT_CATEGORY),
            CONSTRAINT FK_ID_SUPPLIER_PRODUCT FOREIGN KEY(ID_SUPPLIER) REFERENCES SUPPLIER(ID_SUPPLIER)
        )';
        EXECUTE IMMEDIATE sql_stmt;
    END IF;
--BILL
SELECT COUNT(*) INTO tbl_count 
    FROM dba_tables
    WHERE owner = 'SYSTEM'
    AND table_name = 'BILL';

    IF(tbl_count <= 0)
        THEN
        sql_stmt:='
        CREATE TABLE BILL (
            ID_BILL NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
            ORDER_DATE DATE,
            DELIVERY_DATE DATE,
            ID_CUSTOMER NUMBER(10) NOT NULL,
            PRICE NUMBER(22,2),
            ID_SELLER NUMBER(10) NOT NULL,
            NAME_SELLER VARCHAR2(25),
            STATUS_ID_BILL VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            PRIMARY KEY(ID_BILL),
            CONSTRAINT FK_ID_CUSTOMER_BILL FOREIGN KEY(ID_CUSTOMER) REFERENCES CUSTOMER(ID_CUSTOMER),
            CONSTRAINT FK_ID_SELLER_BILL FOREIGN KEY(ID_SELLER) REFERENCES STAFF(ID_STAFF)
        )';
        EXECUTE IMMEDIATE sql_stmt;
    END IF;
--BILL_DETAILS
SELECT COUNT(*) INTO tbl_count 
    FROM dba_tables
    WHERE owner = 'SYSTEM'
    AND table_name = 'BILL_DETAILS';

    IF(tbl_count <= 0)
        THEN
        sql_stmt:='
        CREATE TABLE BILL_DETAILS (
            ID_BILL_DETAILS NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
            ID_BILL NUMBER(10) NOT NULL,
            ID_PRODUCT NUMBER(10) NOT NULL,
            QUANTITY NUMBER(10) DEFAULT 0 NOT NULL,
            PRICE NUMBER(22,2),
            STATUS_BILL_DETAILS VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            PRIMARY KEY(ID_BILL_DETAILS),
            CONSTRAINT FK_ID_BILL_BILL_DETAILS FOREIGN KEY(ID_BILL) REFERENCES BILL(ID_BILL),
            CONSTRAINT FK_ID_PRODUCT_BILL_DETAILS FOREIGN KEY(ID_PRODUCT) REFERENCES PRODUCT(ID_PRODUCT)
        )';
        EXECUTE IMMEDIATE sql_stmt;
    END IF;
--STAGE
SELECT COUNT(*) INTO tbl_count 
    FROM dba_tables
    WHERE owner = 'SYSTEM'
    AND table_name = 'STAGE';

    IF(tbl_count <= 0)
        THEN
        sql_stmt:='
        CREATE TABLE STAGE (
            ID_STAGE NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
            NAME_STAGE VARCHAR2(25) NOT NULL,
            PRICE_STAGE NUMBER(22,2),
            STATUS_STAGE VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            PRIMARY KEY(ID_STAGE)
        )';
        EXECUTE IMMEDIATE sql_stmt;
    END IF;
--SHIFT
SELECT COUNT(*) INTO tbl_count 
    FROM dba_tables
    WHERE owner = 'SYSTEM'
    AND table_name = 'SHIFT';

    IF(tbl_count <= 0)
        THEN
        sql_stmt:='
        CREATE TABLE SHIFT (
            ID_SHIFT NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
            NAME_SHIFT NUMBER(10),
            COEFFICIENT NUMBER(7,2),
            STATUS_SHIFT VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            PRIMARY KEY(ID_SHIFT)
        )';
        EXECUTE IMMEDIATE sql_stmt;
    END IF;
--POSITION
SELECT COUNT(*) INTO tbl_count 
    FROM dba_tables
    WHERE owner = 'SYSTEM'
    AND table_name = 'POSITION';

    IF(tbl_count <= 0)
        THEN
        sql_stmt:='
        CREATE TABLE POSITION (
            ID_POSITION NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
            NAME_POSITION NUMBER(10),
            ALLOWANCE NUMBER(22,2),
            STATUS_POSITION VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            PRIMARY KEY(ID_POSITION)
        )';
        EXECUTE IMMEDIATE sql_stmt;
    END IF;
--POSITION_DETAILS
SELECT COUNT(*) INTO tbl_count 
    FROM dba_tables
    WHERE owner = 'SYSTEM'
    AND table_name = 'POSITION_DETAILS';

    IF(tbl_count <= 0)
        THEN
        sql_stmt:='
        CREATE TABLE POSITION_DETAILS (
            ID_POSITION_DETAILS NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
            ID_POSITION NUMBER(10),
            ID_STAFF NUMBER(10),
            ALLOWANCE NUMBER(22,2),
            STATUS_POSITION_DETAILS VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            PRIMARY KEY(ID_POSITION_DETAILS),
            CONSTRAINT FK_ID_POSITION_POSITION_DETAILS FOREIGN KEY(ID_POSITION) REFERENCES POSITION(ID_POSITION),
            CONSTRAINT FK_ID_STAFF_POSITION_DETAILS FOREIGN KEY(ID_STAFF) REFERENCES STAFF(ID_STAFF)
        )';
        EXECUTE IMMEDIATE sql_stmt;
    END IF;
--SALARY
SELECT COUNT(*) INTO tbl_count 
    FROM dba_tables
    WHERE owner = 'SYSTEM'
    AND table_name = 'SALARY';

    IF(tbl_count <= 0)
        THEN
        sql_stmt:='
        CREATE TABLE SALARY (
            ID_SALARY NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
            ID_STAFF NUMBER(10),
            SALARY NUMBER(22,2),
            STATUS_SALARY VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            PRIMARY KEY(ID_SALARY),
            CONSTRAINT FK_ID_STAFF_SALARY FOREIGN KEY(ID_STAFF) REFERENCES STAFF(ID_STAFF)
        )';
        EXECUTE IMMEDIATE sql_stmt;
    END IF;
--SALARY_DETAILS
SELECT COUNT(*) INTO tbl_count 
    FROM dba_tables
    WHERE owner = 'SYSTEM'
    AND table_name = 'SALARY_DETAILS';

    IF(tbl_count <= 0)
        THEN
        sql_stmt:='
        CREATE TABLE SALARY_DETAILS (
            ID_SALARY_DETAILS NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
            ID_SALARY NUMBER(10),
            ID_STAGE NUMBER(10),
            ID_SHIFT NUMBER(10),
            DATE_WORK DATE,
            PRICE_STAGE NUMBER(22,2),
            STATUS_SALARY VARCHAR2(2) DEFAULT ''1'' NOT NULL,
            PRIMARY KEY(ID_SALARY_DETAILS),
            CONSTRAINT FK_ID_SALARY_SALARY_DETAILS FOREIGN KEY(ID_SALARY) REFERENCES SALARY(ID_SALARY),
            CONSTRAINT FK_ID_STAGE_SALARY_DETAILS FOREIGN KEY(ID_STAGE) REFERENCES STAGE(ID_STAGE),
            CONSTRAINT FK_ID_SHIFT_SALARY_DETAILS FOREIGN KEY(ID_SHIFT) REFERENCES SHIFT(ID_SHIFT)
        )';
        EXECUTE IMMEDIATE sql_stmt;
    END IF;
END;